{"version":3,"sources":["./src/app/crisis-center/crisis-center.module.ts","./src/app/crisis-center/crisis-center-home/crisis-center-home.component.ts","./src/app/crisis-center/crisis-center-home/crisis-center-home.component.html","./src/app/crisis-center/crisis-detail/crisis-detail.component.ts","./src/app/crisis-center/crisis-detail/crisis-detail.component.html","./src/app/dialog.service.ts","./src/app/crisis-center/crisis-center-routing.module.ts","./src/app/crisis-center/mock-crises.ts","./src/app/crisis-center/crisis-detail-resolver.service.ts","./src/app/crisis-center/crisis-center/crisis-center.component.ts","./src/app/crisis-center/crisis-center/crisis-center.component.html","./src/app/crisis-center/crisis-list/crisis-list.component.ts","./src/app/crisis-center/crisis-list/crisis-list.component.html","./src/app/crisis-center/crisis.service.ts","./src/app/can-deactivate.guard.ts"],"names":[],"mappings":"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","file":"crisis-center-crisis-center-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { CrisisCenterHomeComponent } from './crisis-center-home/crisis-center-home.component';\nimport { CrisisListComponent } from './crisis-list/crisis-list.component';\nimport { CrisisCenterComponent } from './crisis-center/crisis-center.component';\nimport { CrisisDetailComponent } from './crisis-detail/crisis-detail.component';\n\nimport { CrisisCenterRoutingModule } from './crisis-center-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CrisisCenterRoutingModule\n  ],\n  declarations: [\n    CrisisCenterComponent,\n    CrisisListComponent,\n    CrisisCenterHomeComponent,\n    CrisisDetailComponent\n  ]\n})\nexport class CrisisCenterModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-crisis-center-home',\n  templateUrl: './crisis-center-home.component.html',\n  styleUrls: ['./crisis-center-home.component.css']\n})\nexport class CrisisCenterHomeComponent { }\n","<p>Welcome to the Crisis Center</p>","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Crisis } from '../crisis';\nimport { DialogService } from '../../dialog.service';\n\n@Component({\n  selector: 'app-crisis-detail',\n  templateUrl: './crisis-detail.component.html',\n  styleUrls: ['./crisis-detail.component.css']\n})\nexport class CrisisDetailComponent implements OnInit {\n  crisis: Crisis;\n  editName: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialogService: DialogService\n  ) {}\n\n  ngOnInit() {\n    this.route.data\n      .subscribe((data: { crisis: Crisis }) => {\n        this.editName = data.crisis.name;\n        this.crisis = data.crisis;\n      });\n  }\n\n  cancel() {\n    this.gotoCrises();\n  }\n\n  save() {\n    this.crisis.name = this.editName;\n    this.gotoCrises();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    // Allow synchronous navigation (`true`) if no crisis or the crisis is unchanged\n    if (!this.crisis || this.crisis.name === this.editName) {\n      return true;\n    }\n    // Otherwise ask the user with the dialog service and return its\n    // observable which resolves to true or false when the user decides\n    return this.dialogService.confirm('Discard changes?');\n  }\n\n  gotoCrises() {\n    const crisisId = this.crisis ? this.crisis.id : null;\n    // Pass along the crisis id if available\n    // so that the CrisisListComponent can select that crisis.\n    // Add a totally useless `foo` parameter for kicks.\n    // Relative navigation back to the crises\n    this.router.navigate(['../', { id: crisisId, foo: 'foo' }], { relativeTo: this.route });\n  }\n}\n","<div *ngIf=\"crisis\">\n  <h3>\"{{ editName }}\"</h3>\n  <div>\n    <label>Id: </label>{{ crisis.id }}</div>\n  <div>\n    <label>Name: </label>\n    <input [(ngModel)]=\"editName\" placeholder=\"name\"/>\n  </div>\n  <p>\n    <button (click)=\"save()\">Save</button>\n    <button (click)=\"cancel()\">Cancel</button>\n  </p>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Async modal dialog service\n * DialogService makes this app easier to test by faking this service.\n * TODO: better modal implementation that doesn't use window.confirm\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CrisisCenterHomeComponent } from './crisis-center-home/crisis-center-home.component';\nimport { CrisisListComponent } from './crisis-list/crisis-list.component';\nimport { CrisisCenterComponent } from './crisis-center/crisis-center.component';\nimport { CrisisDetailComponent } from './crisis-detail/crisis-detail.component';\n\nimport { CanDeactivateGuard } from '../can-deactivate.guard';\nimport { CrisisDetailResolverService } from './crisis-detail-resolver.service';\n\nconst crisisCenterRoutes: Routes = [\n  {\n    path: '',\n    component: CrisisCenterComponent,\n    children: [\n      {\n        path: '',\n        component: CrisisListComponent,\n        children: [\n          {\n            path: ':id',\n            component: CrisisDetailComponent,\n            canDeactivate: [CanDeactivateGuard],\n            resolve: {\n              crisis: CrisisDetailResolverService\n            }\n          },\n          {\n            path: '',\n            component: CrisisCenterHomeComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(crisisCenterRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CrisisCenterRoutingModule { }\n","import { Crisis } from './crisis';\n\nexport const CRISES: Crisis[] = [\n  { id: 1, name: 'Dragon Burning Cities' },\n  { id: 2, name: 'Sky Rains Great White Sharks' },\n  { id: 3, name: 'Giant Asteroid Heading For Earth' },\n  { id: 4, name: 'Procrastinators Meeting Delayed Again' },\n];\n","\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { CrisisService } from './crisis.service';\nimport { Crisis } from './crisis';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrisisDetailResolverService implements Resolve<Crisis> {\n  constructor(private cs: CrisisService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Crisis> | Observable<never> {\n    const id = route.paramMap.get('id');\n\n    return this.cs.getCrisis(id).pipe(\n      take(1),\n      mergeMap(crisis => {\n        if (crisis) {\n          return of(crisis);\n        } else { // id not found\n          this.router.navigate(['/crisis-center']);\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-crisis-center',\n  templateUrl: './crisis-center.component.html',\n  styleUrls: ['./crisis-center.component.css']\n})\nexport class CrisisCenterComponent { }\n","<h2>CRISIS CENTER</h2>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CrisisService } from '../crisis.service';\nimport { Crisis } from '../crisis';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-crisis-list',\n  templateUrl: './crisis-list.component.html',\n  styleUrls: ['./crisis-list.component.css']\n})\nexport class CrisisListComponent implements OnInit {\n  crises$: Observable<Crisis[]>;\n  selectedId: number;\n\n  constructor(\n    private service: CrisisService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.crises$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        this.selectedId = +params.get('id');\n        return this.service.getCrises();\n      })\n    );\n  }\n}\n","  <ul class=\"crises\">\n    <li *ngFor=\"let crisis of crises$ | async\"\n      [class.selected]=\"crisis.id === selectedId\">\n      <a [routerLink]=\"[crisis.id]\">\n        <span class=\"badge\">{{ crisis.id }}</span>{{ crisis.name }}\n      </a>\n    </li>\n  </ul>\n\n  <router-outlet></router-outlet>","import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { MessageService } from '../message.service';\nimport { Crisis } from './crisis';\nimport { CRISES } from './mock-crises';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrisisService {\n  static nextCrisisId = 100;\n  private crises$: BehaviorSubject<Crisis[]> = new BehaviorSubject<Crisis[]>(CRISES);\n\n  constructor(private messageService: MessageService) { }\n\n  getCrises() { return this.crises$; }\n\n  getCrisis(id: number | string) {\n    return this.getCrises().pipe(\n      map(crises => crises.find(crisis => crisis.id === +id))\n    );\n  }\n\n  addCrisis(name: string) {\n    name = name.trim();\n    if (name) {\n      const crisis = { id: CrisisService.nextCrisisId++, name };\n      CRISES.push(crisis);\n      this.crises$.next(CRISES);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n"],"sourceRoot":"webpack:///"}