{"version":3,"sources":["webpack:///src/app/crisis-center/crisis-center.module.ts","webpack:///src/app/crisis-center/crisis-center-home/crisis-center-home.component.ts","webpack:///src/app/crisis-center/crisis-center-home/crisis-center-home.component.html","webpack:///src/app/crisis-center/crisis-detail/crisis-detail.component.ts","webpack:///src/app/crisis-center/crisis-detail/crisis-detail.component.html","webpack:///src/app/dialog.service.ts","webpack:///src/app/crisis-center/crisis-center-routing.module.ts","webpack:///src/app/crisis-center/mock-crises.ts","webpack:///src/app/crisis-center/crisis-detail-resolver.service.ts","webpack:///src/app/crisis-center/crisis-center/crisis-center.component.ts","webpack:///src/app/crisis-center/crisis-center/crisis-center.component.html","webpack:///src/app/crisis-center/crisis-list/crisis-list.component.ts","webpack:///src/app/crisis-center/crisis-list/crisis-list.component.html","webpack:///src/app/crisis-center/crisis.service.ts","webpack:///src/app/can-deactivate.guard.ts"],"names":["CrisisCenterModule","imports","declarations","CrisisCenterHomeComponent","selector","templateUrl","styleUrls","CrisisDetailComponent","route","router","dialogService","data","subscribe","editName","crisis","name","gotoCrises","confirm","crisisId","id","navigate","foo","relativeTo","DialogService","message","confirmation","window","providedIn","crisisCenterRoutes","path","component","children","canDeactivate","resolve","CrisisCenterRoutingModule","forChild","exports","CRISES","CrisisDetailResolverService","cs","state","paramMap","get","getCrisis","pipe","CrisisCenterComponent","CrisisListComponent","service","crises$","params","selectedId","getCrises","CrisisService","messageService","crises","find","trim","nextCrisisId","push","next","CanDeactivateGuard"],"mappings":"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","file":"crisis-center-crisis-center-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { CrisisCenterHomeComponent } from './crisis-center-home/crisis-center-home.component';\nimport { CrisisListComponent } from './crisis-list/crisis-list.component';\nimport { CrisisCenterComponent } from './crisis-center/crisis-center.component';\nimport { CrisisDetailComponent } from './crisis-detail/crisis-detail.component';\n\nimport { CrisisCenterRoutingModule } from './crisis-center-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CrisisCenterRoutingModule\n  ],\n  declarations: [\n    CrisisCenterComponent,\n    CrisisListComponent,\n    CrisisCenterHomeComponent,\n    CrisisDetailComponent\n  ]\n})\nexport class CrisisCenterModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-crisis-center-home',\n  templateUrl: './crisis-center-home.component.html',\n  styleUrls: ['./crisis-center-home.component.css']\n})\nexport class CrisisCenterHomeComponent { }\n","<p>Welcome to the Crisis Center</p>","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Crisis } from '../crisis';\nimport { DialogService } from '../../dialog.service';\n\n@Component({\n  selector: 'app-crisis-detail',\n  templateUrl: './crisis-detail.component.html',\n  styleUrls: ['./crisis-detail.component.css']\n})\nexport class CrisisDetailComponent implements OnInit {\n  crisis: Crisis;\n  editName: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public dialogService: DialogService\n  ) {}\n\n  ngOnInit() {\n    this.route.data\n      .subscribe((data: { crisis: Crisis }) => {\n        this.editName = data.crisis.name;\n        this.crisis = data.crisis;\n      });\n  }\n\n  cancel() {\n    this.gotoCrises();\n  }\n\n  save() {\n    this.crisis.name = this.editName;\n    this.gotoCrises();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    // Allow synchronous navigation (`true`) if no crisis or the crisis is unchanged\n    if (!this.crisis || this.crisis.name === this.editName) {\n      return true;\n    }\n    // Otherwise ask the user with the dialog service and return its\n    // observable which resolves to true or false when the user decides\n    return this.dialogService.confirm('Discard changes?');\n  }\n\n  gotoCrises() {\n    const crisisId = this.crisis ? this.crisis.id : null;\n    // Pass along the crisis id if available\n    // so that the CrisisListComponent can select that crisis.\n    // Add a totally useless `foo` parameter for kicks.\n    // Relative navigation back to the crises\n    this.router.navigate(['../', { id: crisisId, foo: 'foo' }], { relativeTo: this.route });\n  }\n}\n","<div *ngIf=\"crisis\">\n  <h3>\"{{ editName }}\"</h3>\n  <div>\n    <label>Id: </label>{{ crisis.id }}</div>\n  <div>\n    <label>Name: </label>\n    <input [(ngModel)]=\"editName\" placeholder=\"name\"/>\n  </div>\n  <p>\n    <button (click)=\"save()\">Save</button>\n    <button (click)=\"cancel()\">Cancel</button>\n  </p>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Async modal dialog service\n * DialogService makes this app easier to test by faking this service.\n * TODO: better modal implementation that doesn't use window.confirm\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CrisisCenterHomeComponent } from './crisis-center-home/crisis-center-home.component';\nimport { CrisisListComponent } from './crisis-list/crisis-list.component';\nimport { CrisisCenterComponent } from './crisis-center/crisis-center.component';\nimport { CrisisDetailComponent } from './crisis-detail/crisis-detail.component';\n\nimport { CanDeactivateGuard } from '../can-deactivate.guard';\nimport { CrisisDetailResolverService } from './crisis-detail-resolver.service';\n\nconst crisisCenterRoutes: Routes = [\n  {\n    path: '',\n    component: CrisisCenterComponent,\n    children: [\n      {\n        path: '',\n        component: CrisisListComponent,\n        children: [\n          {\n            path: ':id',\n            component: CrisisDetailComponent,\n            canDeactivate: [CanDeactivateGuard],\n            resolve: {\n              crisis: CrisisDetailResolverService\n            }\n          },\n          {\n            path: '',\n            component: CrisisCenterHomeComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(crisisCenterRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CrisisCenterRoutingModule { }\n","import { Crisis } from './crisis';\n\nexport const CRISES: Crisis[] = [\n  { id: 1, name: 'Dragon Burning Cities' },\n  { id: 2, name: 'Sky Rains Great White Sharks' },\n  { id: 3, name: 'Giant Asteroid Heading For Earth' },\n  { id: 4, name: 'Procrastinators Meeting Delayed Again' },\n];\n","\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\nimport { CrisisService } from './crisis.service';\nimport { Crisis } from './crisis';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrisisDetailResolverService implements Resolve<Crisis> {\n  constructor(private cs: CrisisService, private router: Router) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Crisis> | Observable<never> {\n    const id = route.paramMap.get('id');\n\n    return this.cs.getCrisis(id).pipe(\n      take(1),\n      mergeMap(crisis => {\n        if (crisis) {\n          return of(crisis);\n        } else { // id not found\n          this.router.navigate(['/crisis-center']);\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-crisis-center',\n  templateUrl: './crisis-center.component.html',\n  styleUrls: ['./crisis-center.component.css']\n})\nexport class CrisisCenterComponent { }\n","<h2>CRISIS CENTER</h2>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CrisisService } from '../crisis.service';\nimport { Crisis } from '../crisis';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-crisis-list',\n  templateUrl: './crisis-list.component.html',\n  styleUrls: ['./crisis-list.component.css']\n})\nexport class CrisisListComponent implements OnInit {\n  crises$: Observable<Crisis[]>;\n  selectedId: number;\n\n  constructor(\n    private service: CrisisService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.crises$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        this.selectedId = +params.get('id');\n        return this.service.getCrises();\n      })\n    );\n  }\n}\n","  <ul class=\"crises\">\n    <li *ngFor=\"let crisis of crises$ | async\"\n      [class.selected]=\"crisis.id === selectedId\">\n      <a [routerLink]=\"[crisis.id]\">\n        <span class=\"badge\">{{ crisis.id }}</span>{{ crisis.name }}\n      </a>\n    </li>\n  </ul>\n\n  <router-outlet></router-outlet>","import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { MessageService } from '../message.service';\nimport { Crisis } from './crisis';\nimport { CRISES } from './mock-crises';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrisisService {\n  static nextCrisisId = 100;\n  private crises$: BehaviorSubject<Crisis[]> = new BehaviorSubject<Crisis[]>(CRISES);\n\n  constructor(private messageService: MessageService) { }\n\n  getCrises() { return this.crises$; }\n\n  getCrisis(id: number | string) {\n    return this.getCrises().pipe(\n      map(crises => crises.find(crisis => crisis.id === +id))\n    );\n  }\n\n  addCrisis(name: string) {\n    name = name.trim();\n    if (name) {\n      const crisis = { id: CrisisService.nextCrisisId++, name };\n      CRISES.push(crisis);\n      this.crises$.next(CRISES);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n"]}