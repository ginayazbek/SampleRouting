{"version":3,"sources":["webpack:///src/app/selective-preloading-strategy.service.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/heroes/mock-heroes.ts","webpack:///src/app/heroes/hero.service.ts","webpack:///src/app/heroes/heroes-routing.module.ts","webpack:///src/app/animations.ts","webpack:///src/app/heroes/heroes.module.ts","webpack:///src/app/heroes/hero-list/hero-list.component.ts","webpack:///src/app/heroes/hero-list/hero-list.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/heroes/hero-detail/hero-detail.component.ts","webpack:///src/app/heroes/hero-detail/hero-detail.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/compose-message/compose-message.component.ts","webpack:///src/app/compose-message/compose-message.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SelectivePreloadingStrategyService","preloadedModules","route","load","data","preload","push","path","console","log","providedIn","authRoutes","component","AuthRoutingModule","forChild","imports","exports","HEROES","id","name","HeroService","messageService","add","getHeroes","pipe","heroes","find","hero","heroesRoutes","redirectTo","animation","HeroesRoutingModule","slideInAnimation","position","top","left","width","HeroesModule","declarations","HeroListComponent","service","heroes$","paramMap","params","selectedId","get","selector","templateUrl","styleUrls","MessageService","messages","message","AuthGuard","authService","router","state","url","checkLogin","canActivate","isLoggedIn","redirectUrl","sessionId","navigationExtras","queryParams","session_id","fragment","navigate","AppComponent","outlet","activatedRouteData","animations","HeroDetailComponent","hero$","getHero","heroId","foo","AuthModule","AppModule","bootstrap","LoginComponent","setMessage","login","subscribe","queryParamsHandling","preserveFragment","logout","AuthService","val","PageNotFoundComponent","ComposeMessageComponent","sending","details","setTimeout","closePopup","outlets","popup","appRoutes","loadChildren","then","m","AdminModule","canLoad","CrisisCenterModule","pathMatch","AppRoutingModule","forRoot","enableTracing","preloadingStrategy","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectivePreloadingStrategyService implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data.preload) {\n      // add the route path to the preloaded module array\n      this.preloadedModules.push(route.path);\n\n      // log the route path to the console\n      console.log('Preloaded: ' + route.path);\n\n      return load();\n    } else {\n      return of(null);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\n\nconst authRoutes: Routes = [\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(authRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule {}\n","import { Hero } from './hero';\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Dr Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { MessageService } from '../message.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeroService {\n\n  constructor(private messageService: MessageService) { }\n\n  getHeroes(): Observable<Hero[]> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  }\n\n  getHero(id: number | string) {\n    return this.getHeroes().pipe(\n      // (+) before `id` turns the string into a number\n      map((heroes: Hero[]) => heroes.find(hero => hero.id === +id))\n    );\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HeroListComponent } from './hero-list/hero-list.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst heroesRoutes: Routes = [\n  { path: 'heroes', redirectTo: '/superheroes' },\n  { path: 'hero/:id', redirectTo: '/superhero/:id' },\n  { path: 'superheroes',  component: HeroListComponent, data: { animation: 'heroes' } },\n  { path: 'superhero/:id', component: HeroDetailComponent, data: { animation: 'hero' } }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(heroesRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class HeroesRoutingModule { }\n","import {\n  trigger, animateChild, group,\n  transition, animate, style, query\n} from '@angular/animations';\n\n\n// Routable animations\nexport const slideInAnimation =\n  trigger('routeAnimation', [\n    transition('heroes <=> hero', [\n      style({ position: 'relative' }),\n      query(':enter, :leave', [\n        style({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%'\n        })\n      ]),\n      query(':enter', [\n        style({ left: '-100%'})\n      ]),\n      query(':leave', animateChild()),\n      group([\n        query(':leave', [\n          animate('300ms ease-out', style({ left: '100%'}))\n        ]),\n        query(':enter', [\n          animate('300ms ease-out', style({ left: '0%'}))\n        ])\n      ]),\n      query(':enter', animateChild()),\n    ])\n  ]);\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { HeroListComponent } from './hero-list/hero-list.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nimport { HeroesRoutingModule } from './heroes-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HeroesRoutingModule\n  ],\n  declarations: [\n    HeroListComponent,\n    HeroDetailComponent\n  ]\n})\nexport class HeroesModule {}\n","// TODO: Feature Componetized like CrisisCenter\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { HeroService } from '../hero.service';\nimport { Hero } from '../hero';\n\n@Component({\n  selector: 'app-hero-list',\n  templateUrl: './hero-list.component.html',\n  styleUrls: ['./hero-list.component.css']\n})\nexport class HeroListComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  selectedId: number;\n\n  constructor(\n    private service: HeroService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.heroes$ = this.route.paramMap.pipe(\n      switchMap(params => {\n        // (+) before `params.get()` turns the string into a number\n        this.selectedId = +params.get('id');\n        return this.service.getHeroes();\n      })\n    );\n  }\n}\n","<h2>HEROES</h2>\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes$ | async\"\n    [class.selected]=\"hero.id === selectedId\">\n    <a [routerLink]=\"['/hero', hero.id]\">\n      <span class=\"badge\">{{ hero.id }}</span>{{ hero.name }}\n    </a>\n  </li>\n</ul>\n\n<button routerLink=\"/sidekicks\">Go to sidekicks</button>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate, Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  CanActivateChild,\n  NavigationExtras,\n  CanLoad, Route\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n\n  canLoad(route: Route): boolean {\n    const url = `/${route.path}`;\n\n    return this.checkLogin(url);\n  }\n\n  checkLogin(url: string): boolean {\n    if (this.authService.isLoggedIn) { return true; }\n\n    // Store the attempted URL for redirecting\n    this.authService.redirectUrl = url;\n\n    // Create a dummy session id\n    const sessionId = 123456789;\n\n    // Set our navigation extras object\n    // that contains our global query params and fragment\n    const navigationExtras: NavigationExtras = {\n      queryParams: { session_id: sessionId },\n      fragment: 'anchor'\n    };\n\n    // Navigate to the login page with extras\n    this.router.navigate(['/login'], navigationExtras);\n    return false;\n  }\n}\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from './animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  animations: [ slideInAnimation ]\n})\nexport class AppComponent {\n  getAnimationData(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n","<h1 class=\"title\">Angular Router</h1>\n<nav>\n  <a routerLink=\"/crisis-center\" routerLinkActive=\"active\">Crisis Center</a>\n  <a routerLink=\"/superheroes\" routerLinkActive=\"active\">Heroes</a>\n  <a routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\n  <a routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n  <a [routerLink]=\"[{ outlets: { popup: ['compose'] } }]\">Contact</a>\n</nav>\n<div [@routeAnimation]=\"getAnimationData(routerOutlet)\">\n  <router-outlet #routerOutlet=\"outlet\"></router-outlet>\n</div>\n<router-outlet name=\"popup\"></router-outlet>","import { switchMap } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { HeroService } from '../hero.service';\nimport { Hero } from '../hero';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.css']\n})\nexport class HeroDetailComponent implements OnInit {\n  hero$: Observable<Hero>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: HeroService\n  ) {}\n\n\n  ngOnInit() {\n    this.hero$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) =>\n        this.service.getHero(params.get('id')))\n    );\n  }\n\n  gotoHeroes(hero: Hero) {\n    const heroId = hero ? hero.id : null;\n    // Pass along the hero id if available\n    // so that the HeroList component can select that hero.\n    // Include a junk 'foo' property for fun.\n    this.router.navigate(['/superheroes', { id: heroId, foo: 'foo' }]);\n  }\n}\n","<h2>HEROES</h2>\n<div *ngIf=\"hero$ | async as hero\">\n  <h3>\"{{ hero.name }}\"</h3>\n  <div>\n    <label>Id: </label>{{ hero.id }}</div>\n  <div>\n    <label>Name: </label>\n    <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\n  </div>\n  <p>\n    <button (click)=\"gotoHeroes(hero)\">Back</button>\n  </p>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginComponent } from './login/login.component';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AuthRoutingModule\n  ],\n  declarations: [\n    LoginComponent\n  ]\n})\nexport class AuthModule {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Router } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ComposeMessageComponent } from './compose-message/compose-message.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeroesModule } from './heroes/heroes.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HeroesModule,\n    AuthModule,\n    AppRoutingModule,\n  ],\n  declarations: [\n    AppComponent,\n    ComposeMessageComponent,\n    PageNotFoundComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  constructor(router: Router) {\n    // Use a custom replacer to display function names in the route configs\n    // const replacer = (key, value) => (typeof value === 'function') ? value.name : value;\n\n    // console.log('Routes: ', JSON.stringify(router.config, replacer, 2));\n  }\n}\n","import { Component } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  message: string;\n\n  constructor(public authService: AuthService, public router: Router) {\n    this.setMessage();\n  }\n\n  setMessage() {\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n  }\n\n  login() {\n    this.message = 'Trying to log in ...';\n\n    this.authService.login().subscribe(() => {\n      this.setMessage();\n      if (this.authService.isLoggedIn) {\n        // Usually you would use the redirect URL from the auth service.\n        // However to keep the example simple, we will always redirect to `/admin`.\n        const redirectUrl = '/admin';\n\n        // Set our navigation extras object\n        // that passes on our global query params and fragment\n        const navigationExtras: NavigationExtras = {\n          queryParamsHandling: 'preserve',\n          preserveFragment: true\n        };\n\n        // Redirect the user\n        this.router.navigate([redirectUrl], navigationExtras);\n      }\n    });\n  }\n\n  logout() {\n    this.authService.logout();\n    this.setMessage();\n  }\n}\n","<h2>LOGIN</h2>\n<p>{{message}}</p>\n<p>\n  <button (click)=\"login()\"  *ngIf=\"!authService.isLoggedIn\">Login</button>\n  <button (click)=\"logout()\" *ngIf=\"authService.isLoggedIn\">Logout</button>\n</p>","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  isLoggedIn = false;\n\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  login(): Observable<boolean> {\n    return of(true).pipe(\n      delay(1000),\n      tap(val => this.isLoggedIn = true)\n    );\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h2>Page not found</h2>","import { Component, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-compose-message',\n  templateUrl: './compose-message.component.html',\n  styleUrls: ['./compose-message.component.css']\n})\nexport class ComposeMessageComponent {\n  details: string;\n  message: string;\n  sending = false;\n\n  constructor(private router: Router) {}\n\n  send() {\n    this.sending = true;\n    this.details = 'Sending Message...';\n\n    setTimeout(() => {\n      this.sending = false;\n      this.closePopup();\n    }, 1000);\n  }\n\n  cancel() {\n    this.closePopup();\n  }\n\n  closePopup() {\n    // Providing a `null` value to the named outlet\n    // clears the contents of the named outlet\n    this.router.navigate([{ outlets: { popup: null }}]);\n  }\n}\n","<h3>Contact Crisis Center</h3>\n<div *ngIf=\"details\">\n  {{ details }}\n</div>\n<div>\n  <div>\n    <label>Message: </label>\n  </div>\n  <div>\n    <textarea [(ngModel)]=\"message\" rows=\"10\" cols=\"35\" [disabled]=\"sending\"></textarea>\n  </div>\n</div>\n<p *ngIf=\"!sending\">\n  <button (click)=\"send()\">Send</button>\n  <button (click)=\"cancel()\">Cancel</button>\n</p>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ComposeMessageComponent } from './compose-message/compose-message.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { SelectivePreloadingStrategyService } from './selective-preloading-strategy.service';\n\nconst appRoutes: Routes = [\n  {\n    path: 'compose',\n    component: ComposeMessageComponent,\n    outlet: 'popup'\n  },\n  {\n    path: 'admin',\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n    canLoad: [AuthGuard]\n  },\n  {\n    path: 'crisis-center',\n    loadChildren: () => import('./crisis-center/crisis-center.module').then(m => m.CrisisCenterModule),\n    data: { preload: true }\n  },\n  { path: '',   redirectTo: '/superheroes', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false, // <-- debugging purposes only\n        preloadingStrategy: SelectivePreloadingStrategyService,\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}